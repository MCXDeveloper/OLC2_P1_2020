/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gui;

import com.abstracto.Resultado;
import com.analizador.ascendente.lexico.Lexico;
import com.analizador.ascendente.sintactico.Sintactico;
import com.arbol.NRaiz;
import com.bethecoder.ascii_table.ASCIITable;
import com.constantes.ETipoDato;
import com.entorno.TablaSimbolos;
import com.estaticas.ErrorHandler;
import com.estaticas.Manejador;
import com.main.Main;
import org.fife.ui.rsyntaxtextarea.*;
import org.fife.ui.rtextarea.RTextArea;
import org.fife.ui.rtextarea.RTextScrollPane;

import javax.swing.*;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author mcalderon
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        panelAreaTrabajo = new javax.swing.JPanel();
        tabContainer = new javax.swing.JTabbedPane();
        panelConsola = new javax.swing.JPanel();
        jspConsola = new javax.swing.JScrollPane();
        consolaSalida = new javax.swing.JTextPane();
        btnAnalizarAscendente = new javax.swing.JButton();
        btnAnalizarDescendente = new javax.swing.JButton();
        panelGraficos = new javax.swing.JPanel();
        graphContainer = new javax.swing.JTabbedPane();
        barraMenu = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        btnNuevo = new javax.swing.JMenuItem();
        btnAbrir = new javax.swing.JMenuItem();
        btnGuardar = new javax.swing.JMenuItem();
        btnGuardarComo = new javax.swing.JMenuItem();
        menuReportes = new javax.swing.JMenu();
        btnReporteAST = new javax.swing.JMenuItem();
        btnReporteErrores = new javax.swing.JMenuItem();
        btnReporteTS = new javax.swing.JMenuItem();
        salidasContainer = new javax.swing.JTabbedPane();
        innerPanelConsola = new javax.swing.JPanel();
        innerPanelErrores = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consolaErrores = new javax.swing.JTextPane();
        innerPanelSimbolos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        consolaSimbolos = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelAreaTrabajo.setBorder(javax.swing.BorderFactory.createTitledBorder("√Årea de trabajo"));

        javax.swing.GroupLayout panelAreaTrabajoLayout = new javax.swing.GroupLayout(panelAreaTrabajo);
        panelAreaTrabajo.setLayout(panelAreaTrabajoLayout);
        panelAreaTrabajoLayout.setHorizontalGroup(
                panelAreaTrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelAreaTrabajoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(tabContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                                .addContainerGap())
        );
        panelAreaTrabajoLayout.setVerticalGroup(
                panelAreaTrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelAreaTrabajoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(tabContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                                .addContainerGap())
        );

        panelConsola.setBorder(javax.swing.BorderFactory.createTitledBorder("Salidas"));

        consolaSalida.setBackground(new java.awt.Color(0, 0, 0));
        jspConsola.setViewportView(consolaSalida);

        javax.swing.GroupLayout innerPanelConsolaLayout = new javax.swing.GroupLayout(innerPanelConsola);
        innerPanelConsola.setLayout(innerPanelConsolaLayout);
        innerPanelConsolaLayout.setHorizontalGroup(
                innerPanelConsolaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(innerPanelConsolaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jspConsola, javax.swing.GroupLayout.DEFAULT_SIZE, 1113, Short.MAX_VALUE)
                                .addContainerGap())
        );
        innerPanelConsolaLayout.setVerticalGroup(
                innerPanelConsolaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(innerPanelConsolaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jspConsola, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addContainerGap())
        );

        salidasContainer.addTab("Consola", innerPanelConsola);

        consolaErrores.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(consolaErrores);

        javax.swing.GroupLayout innerPanelErroresLayout = new javax.swing.GroupLayout(innerPanelErrores);
        innerPanelErrores.setLayout(innerPanelErroresLayout);
        innerPanelErroresLayout.setHorizontalGroup(
                innerPanelErroresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(innerPanelErroresLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1113, Short.MAX_VALUE)
                                .addContainerGap())
        );
        innerPanelErroresLayout.setVerticalGroup(
                innerPanelErroresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(innerPanelErroresLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addContainerGap())
        );

        salidasContainer.addTab("Errores", innerPanelErrores);

        consolaSimbolos.setBackground(new java.awt.Color(0, 0, 0));
        //consolaSimbolos.setFont(new java.awt.Font("Inconsolata", Font.BOLD, 12)); // NOI18N
        jScrollPane2.setViewportView(consolaSimbolos);

        javax.swing.GroupLayout innerPanelSimbolosLayout = new javax.swing.GroupLayout(innerPanelSimbolos);
        innerPanelSimbolos.setLayout(innerPanelSimbolosLayout);
        innerPanelSimbolosLayout.setHorizontalGroup(
                innerPanelSimbolosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(innerPanelSimbolosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1113, Short.MAX_VALUE)
                                .addContainerGap())
        );
        innerPanelSimbolosLayout.setVerticalGroup(
                innerPanelSimbolosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(innerPanelSimbolosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addContainerGap())
        );

        salidasContainer.addTab("Tabla de Simbolos", innerPanelSimbolos);

        javax.swing.GroupLayout panelConsolaLayout = new javax.swing.GroupLayout(panelConsola);
        panelConsola.setLayout(panelConsolaLayout);
        panelConsolaLayout.setHorizontalGroup(
                panelConsolaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelConsolaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(salidasContainer)
                                .addContainerGap())
        );
        panelConsolaLayout.setVerticalGroup(
                panelConsolaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConsolaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(salidasContainer)
                                .addContainerGap())
        );

        btnAnalizarAscendente.setText("Analizar Ascendente");
        btnAnalizarAscendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarAscendenteActionPerformed(evt);
            }
        });

        btnAnalizarDescendente.setText("Analizar Descendente");
        btnAnalizarDescendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarDescendenteActionPerformed(evt);
            }
        });

        panelGraficos.setBorder(javax.swing.BorderFactory.createTitledBorder("Gr√°ficos"));

        javax.swing.GroupLayout panelGraficosLayout = new javax.swing.GroupLayout(panelGraficos);
        panelGraficos.setLayout(panelGraficosLayout);
        panelGraficosLayout.setHorizontalGroup(
                panelGraficosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelGraficosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(graphContainer)
                                .addContainerGap())
        );
        panelGraficosLayout.setVerticalGroup(
                panelGraficosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelGraficosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(graphContainer)
                                .addContainerGap())
        );

        menuArchivo.setText("Archivo");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        menuArchivo.add(btnNuevo);

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        menuArchivo.add(btnAbrir);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        menuArchivo.add(btnGuardar);

        btnGuardarComo.setText("Guardar como");
        btnGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarComoActionPerformed(evt);
            }
        });
        menuArchivo.add(btnGuardarComo);

        barraMenu.add(menuArchivo);

        menuReportes.setText("Reportes");

        btnReporteAST.setText("AST");
        btnReporteAST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteASTActionPerformed(evt);
            }
        });
        menuReportes.add(btnReporteAST);

        btnReporteErrores.setText("Errores");
        btnReporteErrores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteErroresActionPerformed(evt);
            }
        });
        menuReportes.add(btnReporteErrores);

        btnReporteTS.setText("Tabla de simbolos");
        btnReporteTS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteTSActionPerformed(evt);
            }
        });
        menuReportes.add(btnReporteTS);

        barraMenu.add(menuReportes);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(panelConsola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(panelAreaTrabajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(btnAnalizarAscendente, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(btnAnalizarDescendente, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(panelGraficos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnAnalizarDescendente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnAnalizarAscendente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(panelAreaTrabajo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(panelGraficos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panelConsola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {
        RSyntaxTextArea textArea = getColoredArea();
        Tab pestana = new Tab(textArea, "NuevoTab", "arit");
        tabContainer.addTab(pestana.ObtenerNombreCompletoArchivo(), pestana);
    }

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO - Agregar funcionalidad de Abrir:
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO - Agregar funcionalidad de Guardar:
    }

    private void btnGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO - Agregar funcionalidad de Guardar Como:
    }

    private void btnReporteASTActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO - Agregar funcionalidad de reporte de AST:
    }

    private void btnReporteErroresActionPerformed(java.awt.event.ActionEvent evt) {
        consolaErrores.setText("");
        if (ErrorHandler.GetStringArrayErrors().size() > 0) {
            String[][] data = ErrorHandler.GetStringArrayErrors().toArray(new String[0][]);
            String[] header = { "Archivo", "Tipo", "Ubicaci√≥n", "Descripcion", "Fila", "Columna" };
            String tabla = ASCIITable.getInstance().getTable(header, data);
            appendErrores(tabla);
        } else {
            appendErrores("No hay errores en la tabla que mostrar.");
        }
    }

    private void btnReporteTSActionPerformed(java.awt.event.ActionEvent evt) {
        consolaSimbolos.setText("");
        if (Manejador.TSEstatica.size() > 0) {
            String[][] data = Manejador.TSEstatica.toArray(new String[0][]);
            String[] header = { "Ambito", "Tipo Simbolo", "Tipo Dato", "Nombre" };
            String tabla = ASCIITable.getInstance().getTable(header, data);
            appendSimbolos("IMPRIMIENDO TABLA DE SIMBOLOS..." + System.lineSeparator());
            appendSimbolos(tabla);
        } else {
            appendSimbolos("No hay simbolos en la tabla que mostrar.");
        }
    }

    private void btnAnalizarAscendenteActionPerformed(java.awt.event.ActionEvent evt) {

        Component actualTab = tabContainer.getSelectedComponent();
        Tab auxTab = (Tab)actualTab;
        RTextScrollPane textObject = (RTextScrollPane)actualTab.getComponentAt(0,0);
        RTextArea contenedor = textObject.getTextArea();
        String texto = contenedor.getText();

        // Limpio la consola de salida
        consolaSalida.setText("");
        consolaErrores.setText("");
        consolaSimbolos.setText("");

        // Limpio las variables manejadoras
        Main.cleaner();

        Lexico lexer = new Lexico(new BufferedReader(new InputStreamReader(new ByteArrayInputStream(texto.getBytes(StandardCharsets.UTF_8)))));
        lexer.setArchivo(auxTab.ObtenerNombreCompletoArchivo());

        if (!verificarErrores()) {

            Sintactico parser = new Sintactico(lexer);
            parser.setNombreArchivo(auxTab.ObtenerNombreCompletoArchivo());

            try {

                parser.parse();

                if (!verificarErrores()) {

                    NRaiz raiz = parser.getRaiz();
                    TablaSimbolos ts = new TablaSimbolos();

                    try {
                        Resultado r = raiz.Ejecutar(ts);
                        if (r.getTipoDato() == ETipoDato.ERROR) {
                            verificarErrores();
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }

            } catch (Exception e) {
                appendSalida("FATAL ERROR! - Ocurri√≥ un error al ejecutar las instrucciones!", Color.red);
                e.printStackTrace();
            }

        }

    }

    private void btnAnalizarDescendenteActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO - Agregar funcionalidad de an√°lisis descendente:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    public RSyntaxTextArea getColoredArea() {
        RSyntaxTextArea area = new RSyntaxTextArea(10, 10);
        Theme theme;
        AbstractTokenMakerFactory atm = (AbstractTokenMakerFactory) TokenMakerFactory.getDefaultInstance();
        atm.putMapping("text/example", "com.paint.PainterIDE");
        try {
            theme = Theme.load(getClass().getResourceAsStream("/com/paint/XMLColor.xml"));
            theme.apply(area);
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        area.setSyntaxEditingStyle("text/example");
        area.setCodeFoldingEnabled(true);
        //setFont(area, new Font("Consolas", Font.PLAIN, 16));
        return area;
    }

    public static void setFont(RSyntaxTextArea textArea, Font font) {
        if (font != null) {
            SyntaxScheme ss = textArea.getSyntaxScheme();
            ss = (SyntaxScheme) ss.clone();
            for (int i = 0; i < ss.getStyleCount(); i++) {
                if (ss.getStyle(i) != null) {
                    ss.getStyle(i).font = font;
                }
            }
            textArea.setSyntaxScheme(ss);
            textArea.setFont(font);
        }
    }

    public void appendSalida(String cadena, Color color) {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants. Foreground, color);
        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Droid Sans Mono");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_LEFT);
        int len = consolaSalida.getDocument().getLength();
        consolaSalida.setCaretPosition(len);
        consolaSalida.setCharacterAttributes(aset, false);
        consolaSalida.replaceSelection("> " + cadena + System.lineSeparator());
    }

    private void appendErrores(String cadena) {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants. Foreground, Color.PINK);
        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Droid Sans Mono");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_LEFT);
        int len = consolaErrores.getDocument().getLength();
        consolaErrores.setCaretPosition(len);
        consolaErrores.setCharacterAttributes(aset, false);
        consolaErrores.replaceSelection(cadena);
    }

    private void appendSimbolos(String cadena) {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants. Foreground, Color.YELLOW);
        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Droid Sans Mono");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_LEFT);
        int len = consolaSimbolos.getDocument().getLength();
        consolaSimbolos.setCaretPosition(len);
        consolaSimbolos.setCharacterAttributes(aset, false);
        consolaSimbolos.replaceSelection(cadena);
    }

    private boolean verificarErrores() {
        if (ErrorHandler.ListaErrores.size() > 0) {
            showMessage("Ocurrieron errores al ejecutar el archivo.  Revisar pesta√±a de errores.");
            return true;
        }
        return false;
    }

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    // Variables declaration - do not modify
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenuItem btnAbrir;
    private javax.swing.JButton btnAnalizarAscendente;
    private javax.swing.JButton btnAnalizarDescendente;
    private javax.swing.JMenuItem btnGuardar;
    private javax.swing.JMenuItem btnGuardarComo;
    private javax.swing.JMenuItem btnNuevo;
    private javax.swing.JMenuItem btnReporteAST;
    private javax.swing.JMenuItem btnReporteErrores;
    private javax.swing.JMenuItem btnReporteTS;
    private javax.swing.JTextPane consolaSalida;
    private javax.swing.JTabbedPane graphContainer;
    private javax.swing.JScrollPane jspConsola;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuReportes;
    private javax.swing.JPanel panelAreaTrabajo;
    private javax.swing.JPanel panelConsola;
    private javax.swing.JPanel panelGraficos;
    private javax.swing.JTabbedPane tabContainer;
    private javax.swing.JTextPane consolaErrores;
    private javax.swing.JTextPane consolaSimbolos;
    private javax.swing.JPanel innerPanelConsola;
    private javax.swing.JPanel innerPanelErrores;
    private javax.swing.JPanel innerPanelSimbolos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane salidasContainer;
    // End of variables declaration
}